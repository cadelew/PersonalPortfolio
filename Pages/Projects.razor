@page "/projects"
@using PokerPortfolio.Models
@using PokerPortfolio.Services
@inject NavigationManager NavigationManager
@inject GameStateService GameState

<div class="projects-overlay">
    <div class="projects-container">
        <div class="projects-cards">
            @{
                var projects = GetProjects();
            }
            @for (var i = 0; i < projects.Count; i++)
            {
                var project = projects[i];
                var locked = i >= GameState.CardsDealt;
                <div class="project-card">
                    <div class="card-corner top-left">@project.Rank @project.Suit</div>
                    <div class="card-corner bottom-right">@project.Rank @project.Suit</div>

                    <div class="card-content">
                        <div class="project-icon">@project.Icon</div>
                        <h3 class="project-title">@project.Title</h3>
                        <p class="project-description">@project.Description</p>

                        <div class="tech-stack">
                            <div class="tech-label">TECH STACK</div>
                            <div class="tech-bar">@project.TechStack</div>
                        </div>

                        <a href="@project.GitHubUrl" target="_blank" class="github-link">
                            VIEW ON GITHUB →
                        </a>
                    </div>

                    @if (locked)
                    {
                        <div class="locked-overlay">
                            <div class="locked-message">
                                Locked — deal more cards to reveal
                            </div>
                        </div>
                    }
                </div>
            }
        </div>

        @if (GameState.CardsDealt < 5)
        {
            <div style="margin-bottom:16px;color:#ffcc00;background:#2d1b0e;border:2px solid #ffcc00;padding:8px 12px;box-shadow:4px 4px 0 rgba(0,0,0,0.3);font-size:12px;">
                @("Reveal progress: " + GameState.CardsDealt + "/5 projects unlocked. Deal more cards!")
            </div>
        }

        <button class="pixel-button back-to-table-btn" @onclick="BackToTable" style="background-color:#1a8a1a;color:#ffcc00;border:2px solid #ffcc00;padding:12px 24px;font-size:14px;cursor:pointer;font-family:'Press Start 2P', cursive;box-shadow:3px 3px 0px #8B4513;border-radius:4px;transition:all 0.15s ease;transform:scale(1);">
            Back to Table
        </button>
    </div>
    
    <style>
        .pixel-button {
            transition: all 0.15s ease !important;
            transform: scale(1) !important;
        }

        .pixel-button:hover {
            transform: translateY(-2px) scale(1.05) !important;
            box-shadow: 5px 5px 0px #8B4513 !important;
        }

        .pixel-button:active {
            transform: translateY(1px) scale(0.98) !important;
            box-shadow: 2px 2px 0px #8B4513 !important;
        }

        .back-to-table-btn:hover {
            transform: translateY(-2px) scale(1.05) !important;
            box-shadow: 5px 5px 0px #8B4513 !important;
        }
    </style>
    
    <!-- Retro Effects -->
    <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 9996; background: radial-gradient(ellipse at center, transparent 0%, transparent 40%, rgba(0,0,0,0.6) 100%);"></div>
    <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 9997; background: transparent; animation: glitch 2s infinite;"></div>
    <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 9998; background: rgba(255,255,255,0.02); animation: flicker 0.15s infinite linear;"></div>
    <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 9999; background: repeating-linear-gradient(0deg, rgba(0,0,0,0.15) 0px, rgba(0,0,0,0.15) 1px, transparent 1px, transparent 2px); animation: scanline 8s linear infinite;"></div>
</div>

@code {
    private List<Project> GetProjects()
    {
        return new List<Project>
        {
            new Project
            {
                Title = "Crypto Market Making Engine",
                Description = "Market making engine implementing Avellaneda-Stoikov model with EWMA volatility calculator on real-life market data from Binance Websocket",
                TechStack = "C++ / Python / Postgres / FastAPI",
                GitHubUrl = "https://github.com/cadelew/Crypto-Market-Making-Engine",
                Rank = "Q",
                Suit = "♠"
            },
            new Project
            {
                Title = "CS @ SJDLS",
                Description = "Full-stack educational website for computer science students at SJDLS. Includes dynamic quiz generation, user checklists, and resources for students",
                TechStack = "Javascript / React / Node.js / Express / MongoDB",
                GitHubUrl = "https://github.com/cadelew/cs-at-sjdls",
                Rank = "J",
                Suit = "♣"
            },
            new Project
            {
                Title = "Coming Soon",
                Description = "More projects coming soon!",
                TechStack = "Coming Soon",
                GitHubUrl = "https://github.com/cadelew/",
                Rank = "10",
                Suit = "♥"
            },
            new Project
            {
                Title = "Coming Soon",
                Description = "More projects coming soon!",
                TechStack = "Coming Soon",
                GitHubUrl = "https://github.com/cadelew/",      
                Rank = "9",
                Suit = "♦"
            },
            new Project
            {
                Title = "Coming Soon",
                Description = "More projects coming soon!",
                TechStack = "Coming Soon",
                GitHubUrl = "https://github.com/cadelew/",      
                Rank = "8",
                Suit = "♦"
            }
        };
    }

    private void BackToTable()
    {
        NavigationManager.NavigateTo("/table");
    }
}